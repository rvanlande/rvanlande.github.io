{
    "docs": [
        {
            "location": "/", 
            "text": "Bienvenue sur mon humble site d\u00e9di\u00e9 \u00e0 tout ce qui touche au d\u00e9veloppement logiciel !\n\n\nVous y trouverez  :\n\n\n\n\ndes trucs et astuces dont je peux me servir comme pense-b\u00eate : \nlinux\n \ngit\n \nsql\n \ndocker\n  \n\n\ndes articles (\u00e0 venir)   \n\n\ndes projets personnels :\n\n\nRunning Arena\n\n\n\n\n\n\nune pr\u00e9sentation personnelle : \nabout me\n\n\n\n\nBonne navigation !", 
            "title": "Home"
        }, 
        {
            "location": "/about/", 
            "text": "Renaud Vanlande", 
            "title": "About"
        }, 
        {
            "location": "/articles/", 
            "text": "Coming soon !", 
            "title": "Articles"
        }, 
        {
            "location": "/projets/running_arena/", 
            "text": "D\u00e9veloppement d'une application de suivi en temps r\u00e9el de courses \u00e0 pieds.\n\n\nRunning Arena", 
            "title": "Running arena"
        }, 
        {
            "location": "/tips/git/", 
            "text": "D\u00e9p\u00f4t\n\n\n\n\nAjouter/mettre \u00e0 jour l'url d'un d\u00e9p\u00f4t sur origin\n\n\n\n\n$ git remote add origin \nhttps://new_url/depot.git\n\n$ git remote set-url origin \nhttps://new_url/depot.git\n\n\n\n\n\n\nBranches\n\n\n\n\nCr\u00e9er et se placer sur une branche\n\n\n\n\n$ git checkout -b \nbranch_name\n\n$ git checkout -b \ntest\n origin/dev -\n cr\u00e9e la branche \ntest\n et suit la branche origin/dev\n\n\n\n\n\n\n\nSupprimer une branche\n\n\n\n\n$ git branch -d \nbranch_name\n               \n# supprime la branche locale\n\n$ git push origin --delete \nbranch_name\n    \n# supprime la branche distante\n\n\n\n\n\n\nCommits\n\n\n\n\nAnnuler un merge/commit local\n\n\n\n\n$ git \nreflog\n \n=\n montre les r\u00e9f\u00e9rences HEAD\n$ git reset --hard HEAD@\n{\nX\n}\n \n=\n repositionne le head de la branche sur le commit correspondant  \n/!\n\\ \nAttention la commande annule toutes les modifications en cours de la branches stagged + commited\n\n\n\n\n\nLog\n\n\n\n\nAfficher l'historique d'un fichier avec les modifications\n\n\n\n\n$ git log -p path/to/file\n\n\n\n\n\n\n\nRecherche des commit li\u00e9s au texte\n\n\n\n\n$ git log -p --all -S \nstring \u00e0 chercher\n\n$ git log -p --all -S \nstring \u00e0 chercher\n --source \nfichier dans lequel on recherche\n\n\n\n\n\n\n\n\nVisualiser le graphe\n\n\n\n\n$ git log --oneline --abbrev-commit --all --graph --decorate --color        \n\n\n\n\n\nStash\n\n\n\n\n\n\nsauvegarder le travail en cours de la branche en cours\n\n\n$ git stash save\n\n\n\n\n\n\n\n\n\nr\u00e9tablir le travail suavegard\u00e9 sur la branche en cours\n\n\n$ git stash pop\n\n\n\n\n\n\n\n\n\nAlias\n\n\n\n\ncr\u00e9er un alias git\n\n\n\n\n$ git config --global alias.graph \nlog --oneline --abbrev-commit --all --graph --decorate --color", 
            "title": "Git"
        }, 
        {
            "location": "/tips/git/#depot", 
            "text": "Ajouter/mettre \u00e0 jour l'url d'un d\u00e9p\u00f4t sur origin   $ git remote add origin  https://new_url/depot.git \n$ git remote set-url origin  https://new_url/depot.git", 
            "title": "D\u00e9p\u00f4t"
        }, 
        {
            "location": "/tips/git/#branches", 
            "text": "Cr\u00e9er et se placer sur une branche   $ git checkout -b  branch_name \n$ git checkout -b  test  origin/dev -  cr\u00e9e la branche  test  et suit la branche origin/dev   Supprimer une branche   $ git branch -d  branch_name                 # supprime la branche locale \n$ git push origin --delete  branch_name      # supprime la branche distante", 
            "title": "Branches"
        }, 
        {
            "location": "/tips/git/#commits", 
            "text": "Annuler un merge/commit local   $ git  reflog   =  montre les r\u00e9f\u00e9rences HEAD\n$ git reset --hard HEAD@ { X }   =  repositionne le head de la branche sur le commit correspondant  \n/! \\  Attention la commande annule toutes les modifications en cours de la branches stagged + commited", 
            "title": "Commits"
        }, 
        {
            "location": "/tips/git/#log", 
            "text": "Afficher l'historique d'un fichier avec les modifications   $ git log -p path/to/file   Recherche des commit li\u00e9s au texte   $ git log -p --all -S  string \u00e0 chercher \n$ git log -p --all -S  string \u00e0 chercher  --source  fichier dans lequel on recherche    Visualiser le graphe   $ git log --oneline --abbrev-commit --all --graph --decorate --color", 
            "title": "Log"
        }, 
        {
            "location": "/tips/git/#stash", 
            "text": "sauvegarder le travail en cours de la branche en cours  $ git stash save    r\u00e9tablir le travail suavegard\u00e9 sur la branche en cours  $ git stash pop", 
            "title": "Stash"
        }, 
        {
            "location": "/tips/git/#alias", 
            "text": "cr\u00e9er un alias git   $ git config --global alias.graph  log --oneline --abbrev-commit --all --graph --decorate --color", 
            "title": "Alias"
        }, 
        {
            "location": "/tips/mkdocs/", 
            "text": "Installation\n\n\n\n\nPr\u00e9-requis :\n\n\n\n\nInstaller mkdocs\n\n\n\n\nInstallation\n\n\n\n\n$ git clone github.com/rvanlande/rvanlande.github.io\n$ git checkout mkdocs\n\n\n\n\n\nMise \u00e0 jour de la documentation\n\n\n\n\n\n\nLa documentation se trouve dans le r\u00e9pertoire \nrvanlande.github.io/docs\n\n\n\n\n\n\nsauvegarde des mises \u00e0 jour dans git\n\n\n$ git commit -am \nupdate docs\n\n$ git push origin mkdocs\n\n\n\n\n\n\n\n\n\nD\u00e9ploiement de la documentation\n\n\n$ mkdocs gh-deploy --remote-branch master", 
            "title": "Mkdocs"
        }, 
        {
            "location": "/tips/mkdocs/#installation", 
            "text": "Pr\u00e9-requis :   Installer mkdocs   Installation   $ git clone github.com/rvanlande/rvanlande.github.io\n$ git checkout mkdocs", 
            "title": "Installation"
        }, 
        {
            "location": "/tips/mkdocs/#mise-a-jour-de-la-documentation", 
            "text": "La documentation se trouve dans le r\u00e9pertoire  rvanlande.github.io/docs    sauvegarde des mises \u00e0 jour dans git  $ git commit -am  update docs \n$ git push origin mkdocs", 
            "title": "Mise \u00e0 jour de la documentation"
        }, 
        {
            "location": "/tips/mkdocs/#deploiement-de-la-documentation", 
            "text": "$ mkdocs gh-deploy --remote-branch master", 
            "title": "D\u00e9ploiement de la documentation"
        }, 
        {
            "location": "/tips/postresql/", 
            "text": "cli tools\n\n\npg_dump: save database\n\n\npg_dump -Fc \n${\ndb_name\n}\n \n \n${\ndump_name\n}\n.dmp\n\n\n\n\n\ndropdb : drop database\n\n\ndropdb -U \nuser\n \n${\ndb_name\n}\n\n\n\n\n\n\ncreatedb : create database\n\n\ncreatedb -u \nuser\n \n${\ndb_name\n}\n\n\n\n\n\n\npg_restore : restore database\n\n\npg_restore -d \n${\ndb_name\n}\n \n${\ndump_name\n}\n.dmp\n\n\n\n\n\nduplicate database\n\n\n$ su -\n$ su - postgres   // connect as postgre user\n$ psql            // conect to database\n~\n=\n CREATE DATABASE \n${\ndb_name2\n}\n WITH TEMPLATE \n${\ndb_name1\n}\n OWNER rcv\n;\n\n\n\n\n\n\npsql\n\n\n\n\nconnect to database\n\n\n\n\npsql -U \n${\nuser\n}\n \n${\ndb_name\n}\n\n\n\n\n\n\n\n\ndisplay result in page mode\n\n\n\n\n\\pset pager on\n\n\n\n\n\n\n\nchange database\n\n\n\n\n\\c \nother_db\n\n\n\n\n\n\nDatabase informations\n\n\n\n\nsessions connected to database\n\n\n\n\nselect\n \n*\n \nfrom\n \npg_stat_activity\n;\n\n\n\n\n\n\n\n\nget information about database\n\n\n\n\nselect\n \ntable_name\n,\n \ncolumn_name\n\n\nfrom\n \ninformation_schema\n.\ncolumns\n\n\nwhere\n \ncolumn_name\n \nlike\n \n%xxx%\n \norder\n \nby\n \ntable_name\n,\n \ncolumn_name\n;\n\n\n\n\n\n\n\n\ndisplay enumeration type\n\n\n\n\nselect\n \nn\n.\nnspname\n \nas\n \nenum_schema\n,\n \nt\n.\ntypname\n \nas\n \nenum_name\n,\n \ne\n.\nenumlabel\n \nas\n \nenum_value\n \n\nfrom\n \npg_type\n \nt\n \njoin\n \npg_enum\n \ne\n\n\non\n \nt\n.\noid\n \n=\n \ne\n.\nenumtypid\n \njoin\n \npg_catalog\n.\npg_namespace\n \nn\n\n\non\n \nn\n.\noid\n \n=\n \nt\n.\ntypnamespace\n \n\nwhere\n \nt\n.\ntypname\n \n=\n \n${\ntype\n}\n;\n\n\n\n\n\n\nSQL language\n\n\nalter table\n\n\nadd a column\n\n\nALTER\n \nTABLE\n \npersonne\n \nADD\n \nCOLUMN\n \nparent_id\n \nINTEGER\n \nREFERENCES\n \npersonne\n(\nid\n);\n\n\n\n\n\n\ncomment\n\n\nCOMMENT\n \nON\n \nTABLE\n \npersonne\n \nIS\n \ngestion des personnes\n;\n\n\nCOMMENT\n \nON\n \nCOLUMN\n \npersonne\n.\ndate_naissance\n \nIS\n \ndate de naissance\n;\n\n\n\n\n\n\nPostgresql / JSON : sheet cheat\n\n\nMerci \u00e0 \nHackernoon\n.\n\n\n\n\nSelect items by the value of a first level attribute (#1 way)\n\n\n\n\nSELECT\n \n*\n \nFROM\n \nusers\n \nWHERE\n \nmetadata\n \n@\n \n{\ncountry\n: \nPeru\n}\n;\n\n\n\n\n\n\n\n\nSelect items by the value of a first level attribute (#2 way)\n\n\n\n\nSELECT\n \n*\n \nFROM\n \nusers\n \nWHERE\n \nmetadata\n-\ncountry\n \n=\n \nPeru\n;\n\n\n\n\n\n\n\n\nSelect item attribute value\n\n\n\n\nSELECT\n \nmetadata\n-\ncountry\n \nFROM\n \nusers\n;\n\n\n\n\n\n\n\n\nSelect only items where a particular attribute is present\n\n\n\n\nSELECT\n \n*\n \nFROM\n \nusers\n \nWHERE\n \nmetadata\n-\ncountry\n \nIS\n \nNOT\n \nNULL\n;\n\n\n\n\n\n\n\n\nSelect items by the value of a nested attribute\n\n\n\n\nSELECT\n \n*\n \nFROM\n \nusers\n \nWHERE\n \nmetadata\n-\ncompany\n-\nname\n \n=\n \nMozilla\n;\n\n\nSELECT\n \n*\n \n  \nFROM\n \nusers\n \n  \nWHERE\n \nmetadata\n \n@\n \n{\ncompany\n:{\nname\n: \nMozilla\n}}\n;\n\n\n\n\n\n\n\n\nSelect items by the value of an attribute in an array\n\n\n\n\nSELECT\n \n*\n \nFROM\n \nusers\n \nWHERE\n \nmetadata\n \n@\n \n{\ncompanies\n: [\nMozilla\n]}\n;\n\n\n\n\n\n\n\n\nIN operator on attributes\n\n\n\n\nSELECT\n \n*\n \nFROM\n \nusers\n \n  \nWHERE\n \nmetadata\n-\ncountries\n \nIN\n \n(\nChad\n,\n \nJapan\n);\n\n\n\n\n\n\n\n\nInsert a whole object\n\n\n\n\nUPDATE\n \nusers\n \nSET\n \nmetadata\n \n=\n \n{\ncountry\n: \nIndia\n}\n;\n\n\n\n\n\n\n\n\nUpdate or insert an attribute\n\n\n\n\nUPDATE\n \nusers\n \nSET\n \nmetadata\n \n=\n \nmetadata\n \n||\n \n{\ncountry\n: \nEgypt\n}\n;\n\n\n\n\n\n\n\n\nRemoving an attribute\n\n\n\n\nUPDATE\n \nusers\n \nSET\n \nmetadata\n \n=\n \nmetadata\n \n-\n \ncountry\n;", 
            "title": "Postresql"
        }, 
        {
            "location": "/tips/postresql/#cli-tools", 
            "text": "", 
            "title": "cli tools"
        }, 
        {
            "location": "/tips/postresql/#pg_dump-save-database", 
            "text": "pg_dump -Fc  ${ db_name }     ${ dump_name } .dmp", 
            "title": "pg_dump: save database"
        }, 
        {
            "location": "/tips/postresql/#dropdb-drop-database", 
            "text": "dropdb -U  user   ${ db_name }", 
            "title": "dropdb : drop database"
        }, 
        {
            "location": "/tips/postresql/#createdb-create-database", 
            "text": "createdb -u  user   ${ db_name }", 
            "title": "createdb : create database"
        }, 
        {
            "location": "/tips/postresql/#pg_restore-restore-database", 
            "text": "pg_restore -d  ${ db_name }   ${ dump_name } .dmp", 
            "title": "pg_restore : restore database"
        }, 
        {
            "location": "/tips/postresql/#duplicate-database", 
            "text": "$ su -\n$ su - postgres   // connect as postgre user\n$ psql            // conect to database\n~ =  CREATE DATABASE  ${ db_name2 }  WITH TEMPLATE  ${ db_name1 }  OWNER rcv ;", 
            "title": "duplicate database"
        }, 
        {
            "location": "/tips/postresql/#psql", 
            "text": "connect to database   psql -U  ${ user }   ${ db_name }    display result in page mode   \\pset pager on   change database   \\c  other_db", 
            "title": "psql"
        }, 
        {
            "location": "/tips/postresql/#database-informations", 
            "text": "sessions connected to database   select   *   from   pg_stat_activity ;    get information about database   select   table_name ,   column_name  from   information_schema . columns  where   column_name   like   %xxx%   order   by   table_name ,   column_name ;    display enumeration type   select   n . nspname   as   enum_schema ,   t . typname   as   enum_name ,   e . enumlabel   as   enum_value   from   pg_type   t   join   pg_enum   e  on   t . oid   =   e . enumtypid   join   pg_catalog . pg_namespace   n  on   n . oid   =   t . typnamespace   where   t . typname   =   ${ type } ;", 
            "title": "Database informations"
        }, 
        {
            "location": "/tips/postresql/#sql-language", 
            "text": "", 
            "title": "SQL language"
        }, 
        {
            "location": "/tips/postresql/#alter-table", 
            "text": "", 
            "title": "alter table"
        }, 
        {
            "location": "/tips/postresql/#add-a-column", 
            "text": "ALTER   TABLE   personne   ADD   COLUMN   parent_id   INTEGER   REFERENCES   personne ( id );", 
            "title": "add a column"
        }, 
        {
            "location": "/tips/postresql/#comment", 
            "text": "COMMENT   ON   TABLE   personne   IS   gestion des personnes ;  COMMENT   ON   COLUMN   personne . date_naissance   IS   date de naissance ;", 
            "title": "comment"
        }, 
        {
            "location": "/tips/postresql/#postgresql-json-sheet-cheat", 
            "text": "Merci \u00e0  Hackernoon .   Select items by the value of a first level attribute (#1 way)   SELECT   *   FROM   users   WHERE   metadata   @   { country :  Peru } ;    Select items by the value of a first level attribute (#2 way)   SELECT   *   FROM   users   WHERE   metadata - country   =   Peru ;    Select item attribute value   SELECT   metadata - country   FROM   users ;    Select only items where a particular attribute is present   SELECT   *   FROM   users   WHERE   metadata - country   IS   NOT   NULL ;    Select items by the value of a nested attribute   SELECT   *   FROM   users   WHERE   metadata - company - name   =   Mozilla ;  SELECT   *  \n   FROM   users  \n   WHERE   metadata   @   { company :{ name :  Mozilla }} ;    Select items by the value of an attribute in an array   SELECT   *   FROM   users   WHERE   metadata   @   { companies : [ Mozilla ]} ;    IN operator on attributes   SELECT   *   FROM   users  \n   WHERE   metadata - countries   IN   ( Chad ,   Japan );    Insert a whole object   UPDATE   users   SET   metadata   =   { country :  India } ;    Update or insert an attribute   UPDATE   users   SET   metadata   =   metadata   ||   { country :  Egypt } ;    Removing an attribute   UPDATE   users   SET   metadata   =   metadata   -   country ;", 
            "title": "Postgresql / JSON : sheet cheat"
        }, 
        {
            "location": "/tips/docker/docker-compose/", 
            "text": "Docker Compose\n\n\nInstallation sur debian\n\n\nInstallation\n\n\nCommandes\n\n\nListe des commandes\n\n\n$ docker-compose up -d \n=\n construit, recr\u00e9e et attache les conteneurs au service\n$ docker-compose \ndown\n \n=\n arr\u00eate les conteneurs et supprime les conteneurs, les r\u00e9seaux et les images cr\u00e9\u00e9es par up\n$ docker-compose start \n[\nservice\n]\n \n=\n d\u00e9marre le ou les services\n$ docker-compose stop \n[\nservice\n]\n \n=\n arr\u00eate le ou les services d\u00e9marr\u00e9s par start", 
            "title": "Docker compose"
        }, 
        {
            "location": "/tips/docker/docker-compose/#docker-compose", 
            "text": "", 
            "title": "Docker Compose"
        }, 
        {
            "location": "/tips/docker/docker-compose/#installation-sur-debian", 
            "text": "Installation", 
            "title": "Installation sur debian"
        }, 
        {
            "location": "/tips/docker/docker-compose/#commandes", 
            "text": "Liste des commandes  $ docker-compose up -d  =  construit, recr\u00e9e et attache les conteneurs au service\n$ docker-compose  down   =  arr\u00eate les conteneurs et supprime les conteneurs, les r\u00e9seaux et les images cr\u00e9\u00e9es par up\n$ docker-compose start  [ service ]   =  d\u00e9marre le ou les services\n$ docker-compose stop  [ service ]   =  arr\u00eate le ou les services d\u00e9marr\u00e9s par start", 
            "title": "Commandes"
        }, 
        {
            "location": "/tips/docker/docker/", 
            "text": "Docker Engine\n\n\nDocker\n\n\nDocker Overview\n\n\nDocker Commands\n  \n\n\nInstallation sur debian\n\n\nInstallation\n\n\nLe r\u00e9pertoire contenant tous les donn\u00e9es docker (image, conteneur,...) se trouve dans le r\u00e9pertoire suivant :  \n\n\n/var/lib/docker\n\n\n\n\n\nQuelques commandes\n\n\nImages\n\n\n$ docker \nimages\n    \n=\n Liste les images docker install\u00e9es\n$ docker rmi -f \nid_image\n    \n=\n force la suppression d\nune image par son identifiant\n$ docker build -t \nnom_image\n:\ntag\n  \npath_dockerfile\n  \n=\n cr\u00e9e une image bas\u00e9e sur le Dockerfile avec un nom et un tag\n$ docker rmi \n$(\ndocker images -q -f \ndangling\n=\ntrue\n)\n \n=\n supprime des images temporaires non utilis\u00e9es\n\n\n\n\n\nNOTES :\n\n\n\n\ndocker build : ex\u00e9cute toutes les commandes RUN du script dockerfile\n\n\ndocker run : ex\u00e9cute toutes les commandes CMD du script dockerfile\n\n\n\n\nConteneur\n\n\n\n\ncr\u00e9ation et ex\u00e9cution d'un conteneur\n :\n$ docker run --rm --name \nmon_conteneur\n --net\n=\nhost\n -v \nabsolute_path_host\n:\nabsolute_path_conteneur\n \nimage_name\n\n\n\n\n\n\n\n\n\n\nCette commande cr\u00e9\u00e9e un conteneur 'mon_conteneur' bas\u00e9 sur l'image 'image_name' et le d\u00e9marre avec les options suivantes :  \n\n\n--rm : supprime le conteneur \u00e0 la fin de son ex\u00e9cution\n\n--name : d\u00e9finit un nom pour le conteneur\n\n--net=\"host\" : d\u00e9finit l'interface r\u00e9seau du conteneur avec celle de la machine h\u00f4te\n\n-v HOSTDIR:CONTAINERDIR : partage d'un r\u00e9pertoire entre la machine h\u00f4te et le conteneur  \n\n\n\n\n\n\nCr\u00e9ation et ex\u00e9cution d'un conteneur en ouvrant un terminal\n\n\n$ docker run -it \nimage\n bin/bash\n\n\n\n\n\n\n\n\n\nD\u00e9marrer un conteneur existant\n : \n\n\n$ docker start \ncontainer_id\n\n\n\n\n\n\n\n\n\n\nAttacher un terminal \u00e0 un conteneur en cours d'ex\u00e9cution\n : \n\n\n$ docker \nexec\n -it \ncontainer_id\n bin/bash\n\n\n\n\n\n\n\n\n\nLister tous les conteneurs actifs et inactifs\n :\n\n\n$ docker ps\n$ docker ps -a\n\n\n\n\n\n\n\n\n\nSupprimer tous les conteneurs et leur volume associ\u00e9\n : \n\n\n$ docker ps -aq \n|\n xargs docker rm -v\n\n\n\n\n\n\n\n\n\nNOTES :\n\n\n\n\nImage et conteneur\n :\n\n\n\n\nUne image peut \u00eatre consid\u00e9r\u00e9 comme immuable. D\u00e9marrer un ou plusieurs conteneurs \u00e0 partir de cette image ne changera pas l'image. On peut comparer cela \u00e0 une image virtuelle originale d'une machine virtuelle.  \n\n\nUn conteneur d\u00e9marre l'image et ajoute une couche au-dessus de celle-ci. Cette couche stocke tous les changements du conteneur (cr\u00e9ation/modification/supression de fichiers ...).\n\n\nVolume\n\n\nListe des volumes orphelins\n\n\n$ docker volume ls -qf \ndangling\n=\ntrue\n\n\n\n\n\n\nSuppression des volumes orphelins\n\n\n$ docker volume rm \n$(\ndocker volume ls -qf \ndangling\n=\ntrue\n)", 
            "title": "Docker"
        }, 
        {
            "location": "/tips/docker/docker/#docker-engine", 
            "text": "Docker  Docker Overview  Docker Commands", 
            "title": "Docker Engine"
        }, 
        {
            "location": "/tips/docker/docker/#installation-sur-debian", 
            "text": "Installation  Le r\u00e9pertoire contenant tous les donn\u00e9es docker (image, conteneur,...) se trouve dans le r\u00e9pertoire suivant :    /var/lib/docker", 
            "title": "Installation sur debian"
        }, 
        {
            "location": "/tips/docker/docker/#quelques-commandes", 
            "text": "", 
            "title": "Quelques commandes"
        }, 
        {
            "location": "/tips/docker/docker/#images", 
            "text": "$ docker  images      =  Liste les images docker install\u00e9es\n$ docker rmi -f  id_image      =  force la suppression d une image par son identifiant\n$ docker build -t  nom_image : tag    path_dockerfile    =  cr\u00e9e une image bas\u00e9e sur le Dockerfile avec un nom et un tag\n$ docker rmi  $( docker images -q -f  dangling = true )   =  supprime des images temporaires non utilis\u00e9es  NOTES :   docker build : ex\u00e9cute toutes les commandes RUN du script dockerfile  docker run : ex\u00e9cute toutes les commandes CMD du script dockerfile", 
            "title": "Images"
        }, 
        {
            "location": "/tips/docker/docker/#conteneur", 
            "text": "cr\u00e9ation et ex\u00e9cution d'un conteneur  : $ docker run --rm --name  mon_conteneur  --net = host  -v  absolute_path_host : absolute_path_conteneur   image_name     Cette commande cr\u00e9\u00e9e un conteneur 'mon_conteneur' bas\u00e9 sur l'image 'image_name' et le d\u00e9marre avec les options suivantes :    --rm : supprime le conteneur \u00e0 la fin de son ex\u00e9cution \n--name : d\u00e9finit un nom pour le conteneur \n--net=\"host\" : d\u00e9finit l'interface r\u00e9seau du conteneur avec celle de la machine h\u00f4te \n-v HOSTDIR:CONTAINERDIR : partage d'un r\u00e9pertoire entre la machine h\u00f4te et le conteneur      Cr\u00e9ation et ex\u00e9cution d'un conteneur en ouvrant un terminal  $ docker run -it  image  bin/bash    D\u00e9marrer un conteneur existant  :   $ docker start  container_id     Attacher un terminal \u00e0 un conteneur en cours d'ex\u00e9cution  :   $ docker  exec  -it  container_id  bin/bash    Lister tous les conteneurs actifs et inactifs  :  $ docker ps\n$ docker ps -a    Supprimer tous les conteneurs et leur volume associ\u00e9  :   $ docker ps -aq  |  xargs docker rm -v    NOTES :   Image et conteneur  :   Une image peut \u00eatre consid\u00e9r\u00e9 comme immuable. D\u00e9marrer un ou plusieurs conteneurs \u00e0 partir de cette image ne changera pas l'image. On peut comparer cela \u00e0 une image virtuelle originale d'une machine virtuelle.    Un conteneur d\u00e9marre l'image et ajoute une couche au-dessus de celle-ci. Cette couche stocke tous les changements du conteneur (cr\u00e9ation/modification/supression de fichiers ...).", 
            "title": "Conteneur"
        }, 
        {
            "location": "/tips/docker/docker/#volume", 
            "text": "Liste des volumes orphelins  $ docker volume ls -qf  dangling = true   Suppression des volumes orphelins  $ docker volume rm  $( docker volume ls -qf  dangling = true )", 
            "title": "Volume"
        }, 
        {
            "location": "/tips/linux/divers/", 
            "text": "Divers\n\n\n\n\nrecherche dans les fichiers du r\u00e9pertoire courant et de ses sous r\u00e9pertoire\n\n\n\n\n$ grep -rn . -e \nchaine recherch\u00e9e\n\n\n\n\n\n\n\n\nzipper le contenu d'un r\u00e9pertoire\n\n\n\n\n$ zip -r nom_du_fichier.zip *\n\n\n\n\n\nSSH\n\n\n\n\nd\u00e9marrer l'agent ssh\n\n\n\n\n$ \neval\n \n`\nssh-agent -s\n`\n\n\n\n\n\n\n\n\najouter une cl\u00e9 ssh \u00e0 l'agent\n\n\n\n\n$ ssh-add ~/.ssh/id_rsa\n\n\n\n\n\nSSL : cr\u00e9ation cl\u00e9 priv\u00e9e et certificat\n\n\n\n\nclef priv\u00e9e du serveur\n\n\n\n\n$ \ncd\n /etc/ssl\n$ sudo openssl genrsa -out server.key \n2048\n\n\n\n\n\n\n\n\nDemande de signature du certificat\n\n\n\n\n$ openssl req -text -noout -in server.csr\n\n\n\n\n\n\n\nSignature du certificat : auto-sign\u00e9, valide un an\n\n\n\n\n$ openssl x509 -req -days \n365\n -in server.csr -signkey server.key -out server.crt\n\n\n\n\n\nR\u00e9seaux\n\n\n\n\nvoir les ports ouverts :\n$ sudo netstat -tulpn\n\n\n\n\n\n\n\n\n\nSystemd\n\n\n\n\n\n\nliste les services\n\n\n$ systemctl\n\n\n\n\n\n\n\n\n\nd\u00e9marre un service\n\n\n$ systemctl start exim4\n\n\n\n\n\n\n\n\n\narr\u00eate un service\n\n\n$ systemctl stop exim4\n\n\n\n\n\n\n\n\n\naffiche le statut d'un service\n\n\n$ systemctl status exim4\n\n\n\n\n\n\n\n\n\nactive le service au d\u00e9marrage\n\n\n$ systemctl \nenable\n exim4\n\n\n\n\n\n\n\n\n\nd\u00e9sactive le service au d\u00e9marrage\n\n\n$ systemctl disable exim4\n\n\n\n\n\n\n\n\n\ngpg\n\n\n\n\n\n\ng\u00e9n\u00e9ration des cl\u00e9s\n\n\n$ gpg --gen-key\n\n\n\n\n\n\n\n\n\nafficher les cl\u00e9s\n\n\n$ gpg --list-keys\n$ gpg --list-secret-keys\n\n\n\n\n\n\n\n\n\nimporter une cl\u00e9\n\n\n$\n \ngpg\n \n--\nimport\n \nkey\n-\nfile\n\n\n\n\n\n\n\n\n\n\nexporter une cl\u00e9 publique\n\n\n$ gpg -a --export \nid-cle\n\n\n\n\n\n\n\n\n\n\nexporter une cl\u00e9 priv\u00e9e\n\n\n$ gpg -a --export-secret-key \nid-cle\n\n\n\n\n\n\n\n\n\n\nchiffrer un message\n\n\n$ gpg -a -r \nemail\n -e \nfile\n\n\n\n\n\n\n\n\n\n\nd\u00e9chiffrer un message\n\n\n$ gpg -d \nfile", 
            "title": "Divers"
        }, 
        {
            "location": "/tips/linux/divers/#divers", 
            "text": "recherche dans les fichiers du r\u00e9pertoire courant et de ses sous r\u00e9pertoire   $ grep -rn . -e  chaine recherch\u00e9e    zipper le contenu d'un r\u00e9pertoire   $ zip -r nom_du_fichier.zip *", 
            "title": "Divers"
        }, 
        {
            "location": "/tips/linux/divers/#ssh", 
            "text": "d\u00e9marrer l'agent ssh   $  eval   ` ssh-agent -s `    ajouter une cl\u00e9 ssh \u00e0 l'agent   $ ssh-add ~/.ssh/id_rsa", 
            "title": "SSH"
        }, 
        {
            "location": "/tips/linux/divers/#ssl-creation-cle-privee-et-certificat", 
            "text": "clef priv\u00e9e du serveur   $  cd  /etc/ssl\n$ sudo openssl genrsa -out server.key  2048    Demande de signature du certificat   $ openssl req -text -noout -in server.csr   Signature du certificat : auto-sign\u00e9, valide un an   $ openssl x509 -req -days  365  -in server.csr -signkey server.key -out server.crt", 
            "title": "SSL : cr\u00e9ation cl\u00e9 priv\u00e9e et certificat"
        }, 
        {
            "location": "/tips/linux/divers/#reseaux", 
            "text": "voir les ports ouverts : $ sudo netstat -tulpn", 
            "title": "R\u00e9seaux"
        }, 
        {
            "location": "/tips/linux/divers/#systemd", 
            "text": "liste les services  $ systemctl    d\u00e9marre un service  $ systemctl start exim4    arr\u00eate un service  $ systemctl stop exim4    affiche le statut d'un service  $ systemctl status exim4    active le service au d\u00e9marrage  $ systemctl  enable  exim4    d\u00e9sactive le service au d\u00e9marrage  $ systemctl disable exim4", 
            "title": "Systemd"
        }, 
        {
            "location": "/tips/linux/divers/#gpg", 
            "text": "g\u00e9n\u00e9ration des cl\u00e9s  $ gpg --gen-key    afficher les cl\u00e9s  $ gpg --list-keys\n$ gpg --list-secret-keys    importer une cl\u00e9  $   gpg   -- import   key - file     exporter une cl\u00e9 publique  $ gpg -a --export  id-cle     exporter une cl\u00e9 priv\u00e9e  $ gpg -a --export-secret-key  id-cle     chiffrer un message  $ gpg -a -r  email  -e  file     d\u00e9chiffrer un message  $ gpg -d  file", 
            "title": "gpg"
        }, 
        {
            "location": "/tips/linux/mc/", 
            "text": "Thanks to \nsgergely\n\n\nEsc\n\n\n\n\nQuick change directory: \nEsc + c\n  \n\n\nQuick change directory history: \nEsc + c\n and then \nEsc + h\n  \n\n\nQuick change directory previous entry: \nEsc + c\n and then \nEsc + p\n \n\n\nCommand line history: \nEsc + h\n  \n\n\nCommand line previous command: \nEsc + p\n  \n\n\nView change: \nEsc + t\n (each time you do this shortcut a new directory view will appear)  \n\n\nPrint current working directory in command line: \nEsc + a\n  \n\n\nSearch/Go to directory in active panel: \nEsc + s / Ctrl + s\n then start typing directory name  \n\n\nOpen same working directory in the inactive panel: \nEsc + i\n  \n\n\nOpen parent working directory in the inactive panel: \nEsc + o\n  \n\n\nGo to top of directory in active pane: \nEsc + v / Esc + g\n  \n\n\nGo to bottom of directory in active pane: \nEsc + j / Ctrl + c\n  \n\n\nGo to previous directory: \nEsc + y\n  \n\n\nSearch pop-up: \nEsc + ?\n  \n\n\n\n\nCtrl\n\n\n\n\nSwitch between background command line and MC: \nCtrl + o\n  \n\n\nRefresh active panel: \nCtrl + r\n  \n\n\nSelecting files and directories: \nCtrl + t\n  \n\n\nSwitch active \n-\n inactive panels: \nCtrl + i\n  \n\n\nSwitch active \n-\n inactive panels content: \nCtrl + u\n  \n\n\nExecute command / Open a directory: \nCtrl + j\n  \n\n\n\n\nF\n\n\n\n\nF1\n help  \n\n\nF2\n user menu  \n\n\nF3\n read file / open directory  \n\n\nF4\n edit file  \n\n\nF5\n copy file or direcotry  \n\n\nF6\n move file or directory  \n\n\nF7\n create directory  \n\n\nF8\n delete file / directory  \n\n\nF9\n open menu bar  \n\n\nF10\n exit MC", 
            "title": "Mc"
        }, 
        {
            "location": "/tips/linux/mc/#esc", 
            "text": "Quick change directory:  Esc + c     Quick change directory history:  Esc + c  and then  Esc + h     Quick change directory previous entry:  Esc + c  and then  Esc + p    Command line history:  Esc + h     Command line previous command:  Esc + p     View change:  Esc + t  (each time you do this shortcut a new directory view will appear)    Print current working directory in command line:  Esc + a     Search/Go to directory in active panel:  Esc + s / Ctrl + s  then start typing directory name    Open same working directory in the inactive panel:  Esc + i     Open parent working directory in the inactive panel:  Esc + o     Go to top of directory in active pane:  Esc + v / Esc + g     Go to bottom of directory in active pane:  Esc + j / Ctrl + c     Go to previous directory:  Esc + y     Search pop-up:  Esc + ?", 
            "title": "Esc"
        }, 
        {
            "location": "/tips/linux/mc/#ctrl", 
            "text": "Switch between background command line and MC:  Ctrl + o     Refresh active panel:  Ctrl + r     Selecting files and directories:  Ctrl + t     Switch active  -  inactive panels:  Ctrl + i     Switch active  -  inactive panels content:  Ctrl + u     Execute command / Open a directory:  Ctrl + j", 
            "title": "Ctrl"
        }, 
        {
            "location": "/tips/linux/mc/#f", 
            "text": "F1  help    F2  user menu    F3  read file / open directory    F4  edit file    F5  copy file or direcotry    F6  move file or directory    F7  create directory    F8  delete file / directory    F9  open menu bar    F10  exit MC", 
            "title": "F"
        }, 
        {
            "location": "/tips/webserver/nginx/", 
            "text": "Nginx\n\n\nClear Nginx cache\n\n\n$ rm -rf /var/cache/nginx/*", 
            "title": "Nginx"
        }, 
        {
            "location": "/tips/webserver/nginx/#nginx", 
            "text": "", 
            "title": "Nginx"
        }, 
        {
            "location": "/tips/webserver/nginx/#clear-nginx-cache", 
            "text": "$ rm -rf /var/cache/nginx/*", 
            "title": "Clear Nginx cache"
        }
    ]
}